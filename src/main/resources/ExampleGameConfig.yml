# Example Game Configuration File. Must be named gameconfig.yml and put in the root of your game's .jar for the game to load.
# Everything underneath #REQUIRED MUST be filled in for the game to load and function correctly.
# To get this config file, use ultimateGames.getConfigManager().getGameConfig(Game game);

# REQUIRED
# Name of the game. Should be the same as the name of your .jar
Name: "Game"
Description: "Blank game used for testing purposes"
Version: "1.0"
Author: "ampayne2"
# Path to the main class of your game.
Package: "me.ampayne2.Game.Game"
# Name of the main score type of the game. Will be used for stats, etc.
ScoreTypeName: "Wins"
# Name of the secondary score type of the game.
SecondaryScoreTypeName: "Kills:Deaths"
# The main score type of the game. Choices found in the me.ampayne2.UltimateGames.Enums.ScoreType enumeration.
ScoreType: "POINTS_HIGHER"
# The secondary score type of the game.
SecondaryScoreType: "GOOD_BAD"
# The player type of the game. Choices found in the me.ampayne2.UltimateGames.Enums.PlayerType enumeration.
PlayerType: "CONFIGUREABLE"
# Default settings an arena of the game will have when created.
DefaultSettings:
  MaxPlayers: 8
  # Player management settings. Should certain data be stored and returned to players after a match?
  Players:
    Store-Inventory: true
    Store-Armor: true
    Store-Exp: true
    Store-Effects: true
    Store-Gamemode: true
  Reset-After-Match: true
  Allow-Explosion-Damage: true
  Allow-Explosion-Block-Breaking: false
  Allow-Building: false
  Allow-Breaking: false
  
# PUT YOUR GAME'S PERSONAL CONFIG VALUES HERE
# Get the config with the config manager, then do .getWhatever(Path, default value);
# Example value retrieval:
# FileConfiguration gameConfig = ultimateGames.getConfigManager().getGameConfig(Game game);
# Long gameLength = gameConfig.getLong("CustomValues.GameLength", 3000);
# Boolean cooldownEnabled = gameConfig.getBoolean("CustomValues.Cooldown.Enabled", true);
CustomValues:
  GameLength: 3000
  Cooldown:
    Enabled: true

# PUT YOUR GAME'S PERSONAL MESSAGES HERE. Color codes supported!
# Do not use Bukkit.getServer().broadcastMessage() or player.sendMessage() in the game. Send them using the methods in ultimateGames.getMessageManager()
Messages:
  Kill: "&4%Killed% was killed by %killer%!"
  Win: "&a%Capturer% captured the %Team% team's flag!"
  Score: "&3%Team1% is in the lead against %Team2%, %Team1Points% to %Team2Points%!"